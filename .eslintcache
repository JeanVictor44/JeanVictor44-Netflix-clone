[{"C:\\projetos\\clone-netflix\\src\\index.js":"1","C:\\projetos\\clone-netflix\\src\\App.js":"2","C:\\projetos\\clone-netflix\\src\\GlobalStyles.js":"3","C:\\projetos\\clone-netflix\\src\\components\\Header\\index.js":"4","C:\\projetos\\clone-netflix\\src\\components\\Header\\HeaderElements.js":"5","C:\\projetos\\clone-netflix\\src\\api\\Tmdb.js":"6","C:\\projetos\\clone-netflix\\src\\api\\request.js":"7","C:\\projetos\\clone-netflix\\src\\components\\MovieList\\index.js":"8","C:\\projetos\\clone-netflix\\src\\components\\Modal\\index.js":"9","C:\\projetos\\clone-netflix\\src\\components\\Modal\\ModalElements.js":"10","C:\\projetos\\clone-netflix\\src\\components\\Loader\\index.js":"11","C:\\projetos\\clone-netflix\\src\\components\\Loader\\LoaderElements.js":"12","C:\\projetos\\clone-netflix\\src\\components\\MainSerie\\index.js":"13","C:\\projetos\\clone-netflix\\src\\components\\MainSerie\\MainSerieElements.js":"14","C:\\projetos\\clone-netflix\\src\\components\\MovieList\\MovieListElements.js":"15"},{"size":151,"mtime":1609805885207,"results":"16","hashOfConfig":"17"},{"size":1651,"mtime":1610412980013,"results":"18","hashOfConfig":"17"},{"size":421,"mtime":1610390645486,"results":"19","hashOfConfig":"17"},{"size":1241,"mtime":1610406084916,"results":"20","hashOfConfig":"17"},{"size":1099,"mtime":1610405894750,"results":"21","hashOfConfig":"17"},{"size":1364,"mtime":1610134592804,"results":"22","hashOfConfig":"17"},{"size":106,"mtime":1610412559965,"results":"23","hashOfConfig":"17"},{"size":541,"mtime":1610376434655,"results":"24","hashOfConfig":"17"},{"size":847,"mtime":1610413327134,"results":"25","hashOfConfig":"17"},{"size":480,"mtime":1610217857513,"results":"26","hashOfConfig":"17"},{"size":200,"mtime":1610215852733,"results":"27","hashOfConfig":"17"},{"size":551,"mtime":1610196308503,"results":"28","hashOfConfig":"17"},{"size":1240,"mtime":1610389418109,"results":"29","hashOfConfig":"17"},{"size":1553,"mtime":1610406124619,"results":"30","hashOfConfig":"17"},{"size":536,"mtime":1610382462972,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ng7aca",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\projetos\\clone-netflix\\src\\index.js",[],["67","68"],"C:\\projetos\\clone-netflix\\src\\App.js",[],"C:\\projetos\\clone-netflix\\src\\GlobalStyles.js",[],"C:\\projetos\\clone-netflix\\src\\components\\Header\\index.js",["69","70","71","72"],"import {useState, useEffect} from 'react'\r\nimport {Container, Navigation} from './HeaderElements' \r\nimport Logo from '../../assets/netflixLogo.svg'\r\n\r\nconst Header = () => {\r\n\r\n    const [haveBackground, setBackground] = useState(false) \r\n\r\n    useEffect(() => {   \r\n        const watchScroll = () => {\r\n            if(window.scrollY > 170) {\r\n                setBackground(true)\r\n            }else {\r\n                setBackground(false)\r\n            }\r\n        }\r\n        window.addEventListener('scroll',watchScroll)    \r\n    })\r\n\r\n    return (\r\n        <Container background={haveBackground}>\r\n            <div>\r\n\r\n                <div>\r\n                    <img src={Logo} alt=\"Netflix Logo\" />\r\n                </div>\r\n                \r\n                <Navigation>\r\n                <ul>\r\n                    <li><a  href=\"#\">Início</a></li>\r\n                    <li><a  href=\"#\">Séries</a></li>\r\n                    <li><a  href=\"#\">Filmes</a></li>\r\n                    <li><a  href=\"#\">Minha Lista</a></li>\r\n                </ul>\r\n            </Navigation>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Buscar\"/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default Header",["73","74"],"C:\\projetos\\clone-netflix\\src\\components\\Header\\HeaderElements.js",[],"C:\\projetos\\clone-netflix\\src\\api\\Tmdb.js",["75"],"//Centro dos métodos de requisição \r\nimport Api from './request'\r\n\r\nconst {REACT_APP_API_KEY:API_KEY} = process.env \r\nexport default {\r\n    getHomeMovies: async() => {\r\n        return [\r\n            {\r\n                slug:'Netflix',\r\n                title:'Originais Netflix',\r\n                movies:(await Api.get(`/discover/tv?api_key=${API_KEY}&with_networks=213&language=pt-BR`)).data.results\r\n            },\r\n            \r\n            {\r\n                title:'Populares',\r\n                movies:(await Api.get(`/movie/popular?api_key=${API_KEY}&language=pt-BR`)).data.results\r\n            },\r\n            \r\n            {\r\n                title:'Séries em alta',\r\n                movies:(await Api.get(`/tv/popular?api_key=${API_KEY}&language=pt-BR`)).data.results\r\n            } /* ,\r\n\r\n            {\r\n                title:'',\r\n                movies:().data.results\r\n            },\r\n           \r\n            {\r\n                title:'',\r\n                movies:().data.results\r\n            },\r\n           \r\n            {\r\n                title:'',\r\n                movies:().data.results\r\n            } */\r\n           \r\n        ]\r\n    },\r\n    getDetailsSerie: async(serieId) => {\r\n        const detailsSerie = (await Api.get(`/tv/${serieId}?api_key=${API_KEY}&language=pt-BR&append_to_response=videos`)).data\r\n        return detailsSerie\r\n    }\r\n\r\n}","C:\\projetos\\clone-netflix\\src\\api\\request.js",[],"C:\\projetos\\clone-netflix\\src\\components\\MovieList\\index.js",[],"C:\\projetos\\clone-netflix\\src\\components\\Modal\\index.js",["76"],"C:\\projetos\\clone-netflix\\src\\components\\Modal\\ModalElements.js",[],"C:\\projetos\\clone-netflix\\src\\components\\Loader\\index.js",[],"C:\\projetos\\clone-netflix\\src\\components\\Loader\\LoaderElements.js",[],"C:\\projetos\\clone-netflix\\src\\components\\MainSerie\\index.js",["77"],"import playButton from '../../assets/playButton.svg' \r\nimport {Container, DetailsContainer, InfoContainer, ContainerButtons, Overview} from './MainSerieElements'\r\n\r\nconst PrincipalSerie = ({detailsSerie, openModal}) => {\r\n\r\n    \r\n    return (\r\n        <Container background={`https://image.tmdb.org/t/p/original/${detailsSerie.backdrop_path}`}>   \r\n            <DetailsContainer>\r\n                <h1>{detailsSerie.name}</h1>\r\n\r\n                <InfoContainer>\r\n                    <p>{detailsSerie.vote_average} Votos</p>\r\n                    <p>{new Date(detailsSerie.first_air_date).getFullYear()}</p>\r\n                    <p>{detailsSerie.number_of_seasons} Temporada{detailsSerie.number_of_seasons > 1 &&'s'}</p>\r\n                </InfoContainer>\r\n                <Overview>{detailsSerie.overview}</Overview>\r\n                <ContainerButtons>\r\n\r\n                    <button onClick={openModal}><img src={playButton} />Assistir trailer</button>\r\n                    <button >+ Minha lista</button>\r\n                </ContainerButtons>\r\n                <p><strong>Gêneros</strong>: {detailsSerie.genres.map(genre => genre.name + ' ')}</p>\r\n            </DetailsContainer>\r\n        </Container>\r\n    )\r\n}\r\nexport default PrincipalSerie","C:\\projetos\\clone-netflix\\src\\components\\MainSerie\\MainSerieElements.js",[],"C:\\projetos\\clone-netflix\\src\\components\\MovieList\\MovieListElements.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":30,"column":25,"nodeType":"84","endLine":30,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":31,"column":25,"nodeType":"84","endLine":31,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":32,"column":25,"nodeType":"84","endLine":32,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":33,"column":25,"nodeType":"84","endLine":33,"endColumn":38},{"ruleId":"78","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":1,"nodeType":"89","endLine":46,"endColumn":2},{"ruleId":"90","severity":1,"message":"91","line":16,"column":13,"nodeType":"84","endLine":16,"endColumn":225},{"ruleId":"92","severity":1,"message":"93","line":20,"column":49,"nodeType":"84","endLine":20,"endColumn":73},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["94"],["95"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]